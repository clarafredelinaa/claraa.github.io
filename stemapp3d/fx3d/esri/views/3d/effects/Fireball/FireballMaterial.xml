<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2023 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="fireballFS"><![CDATA[uniform sampler2D pl;uniform float mo;uniform vec3 oe;uniform vec4 os;uniform vec4 si;uniform vec4 om;uniform vec3 eo;uniform bool drawPath;varying vec4 dc;varying vec3 ch;varying vec3 cc;void main(){float a=mo*0.01;gl_FragColor.rgb=dc.rgb;gl_FragColor.a=1.0;if(!drawPath){
#ifdef GLOBAL
gl_FragColor=(texture2D(pl,gl_PointCoord)*gl_FragColor);if(gl_FragColor.r>=0.15&&gl_FragColor.g>=0.15&&gl_FragColor.b>=0.15){gl_FragColor.rgb-=vec3(0.15,0.15,0.15);}
#else
gl_FragColor=(texture2D(pl,gl_PointCoord)*gl_FragColor)+vec4(0.27,0.27,0.27,0.0);
#endif
gl_FragColor.a*=a;}else{gl_FragColor.a*=(0.3*a);}if(gl_FragColor.r<=1e-6&&gl_FragColor.g<=1e-6&&gl_FragColor.b<=1e-6){gl_FragColor.rgb=vec3(0.1,0.1,0.1);gl_FragColor.a=0.1;}}]]></snippet><snippet name="fireballVS"><![CDATA[attribute vec3 $auxpos1;uniform mat4 ms;uniform mat4 se;uniform sampler2D ii;uniform vec2 ol;uniform sampler2D ep;uniform vec2 es;uniform float so;uniform float ls;uniform float em;uniform vec2 oi;uniform bool drawPath;uniform sampler2D op;uniform bool ml;varying vec4 dc;varying vec3 ch;varying vec3 cc; $linearInterpolator  $lonlat2position  $localTrans  $curveInter void main(void){float a=fract($auxpos1.x*2.0/es.x);float b=floor($auxpos1.x*2.0/es.y)/es.y;vec4 c=texture2D(ep,vec2(a,b));if(abs(c.r-$auxpos1.x)<Epsilon){vec3 d=c.gba;a=fract(($auxpos1.x*2.0+1.0)/es.x);b=floor(($auxpos1.x*2.0+1.0)/es.y)/es.y;vec4 e=texture2D(ep,vec2(a,b));vec3 f=e.gba;vec3 g,h,i,j;float k,l;float m=1.0;float n=0.0;
#ifdef GLOBAL
d=lonlat2position(d);f=lonlat2position(f);g=(d+f)*0.5;h=normalize(g);i=d-f;k=length(i);g=h*(length(g)+k*0.6);if(k<=1000.0){l=32.0;}else if(k<=10000.0){l=24.0;}else if(k<=500000.0){l=18.0;}else if(k<=1000000.0){l=40.0;}else{l=floor(k*0.00001);}if(drawPath){n=$auxpos1.z;}else{n=mod($auxpos1.z+(l*2.0+1.0)/so*em,l*2.0+1.0);}if((n>=l)&&(n<(l*2.0+1.0))){m=-1.0;n-=l;}vec3 o=normalize(i);vec3 p=g+o*(k*0.6*m);float q=n/l;q=clamp(q,0.0,1.0);if(m<=0.0){j=getPoint(q,g,p,f,f);}else{j=getPoint(q,d,d,p,g);}ch=normalize(j);
#else
d=wgs84ToWebMerc(d);f=wgs84ToWebMerc(f);g=(d+f)*0.5;h=vec3(0.0,0.0,1.0);i=d-f;k=length(i);g=g+h*(k*0.3);if(k<=1000.0){l=48.0;}else if(k<=10000.0){l=42.0;}else if(k<=100000.0){l=32.0;}else if(k<=1000000.0){l=24.0;}else if(k<=2000000.0){l=36.0;}else{l=floor(k*0.000006);}if(drawPath){n=$auxpos1.z;}else{n=mod($auxpos1.z+(l*2.0+1.0)/so*em,l*2.0+1.0);}if((n>=l)&&(n<(l*2.0+1.0))){m=-1.0;n-=l;}vec3 o=normalize(i);vec3 p=g+o*(k*0.3*m);float q=n/l;q=clamp(q,0.0,1.0);if(m<=0.0){j=getPoint(q,g,p,f,f);}else{j=getPoint(q,d,d,p,g);}ch=vec3(0.0,0.0,1.0);
#endif
gl_Position=ms*se*vec4(j,1.0);cc=j;a=fract($auxpos1.y/ol.x);b=floor($auxpos1.y/ol.y)/ol.y;float r=(texture2D(ii,vec2(a,b))).r;float s=getLinearValue(oi,r);if(!drawPath){gl_PointSize=ls*pow(2.718,s);}dc=texture2D(op,vec2(s,0.5));}else{vec3 j=vec3(0.0,0.0,0.0);gl_Position=ms*se*vec4(j,1.0);cc=j;if(!drawPath) gl_PointSize=ls;dc=vec4(1.0,1.0,0.0,1.0);ch=normalize(j);}}]]></snippet></snippets>