<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2023 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="pointExtrudeFS"><![CDATA[
#ifdef GL_ES
precision mediump float;
#endif
uniform float ss;uniform vec3 es;uniform vec4 im;uniform vec4 ps;uniform vec4 oe;uniform vec3 camPos;varying vec4 hc;varying vec3 cg;varying vec3 gd;const vec3 a=vec3(1.0,1.0,1.0);const vec3 b=vec3(1.0,1.0,1.0);const vec3 c=vec3(0.2,0.2,0.2);void main(){vec3 d=normalize(gd-camPos);vec3 e=normalize(cg);vec3 f=normalize(reflect(d,e));float g=max(dot(f,es),.001);vec3 h=c*oe.rgb*oe.w*pow(g,18.0);vec3 i=a*ps.rgb*ps.w*clamp(dot(e,es),.0,1.0);vec3 j=b*im.rgb*im.w;vec3 k=vec3(j+i+h);gl_FragColor.xyz=hc.xyz*k;float l=ss*0.01;gl_FragColor.w=l;}]]></snippet><snippet name="pointExtrudeVS"><![CDATA[attribute vec3 $position;attribute vec3 $auxpos1;attribute vec3 $normal;attribute vec3 $auxpos2;uniform mat4 ls;uniform mat4 viewMat;uniform sampler2D ll;uniform sampler2D lo;uniform float ip;uniform vec3 po;uniform vec3 origin;uniform vec3 camPos;uniform sampler2D pm;uniform vec3 so;uniform float oo;uniform float oi;uniform vec2 eo;uniform vec2 el;uniform bool lp;uniform float pp;uniform vec4 mo;varying vec4 hc;varying vec3 cg;varying vec3 gd; $linearInterpolator  $lonlat2position  $translationMat  $localTrans  $quintEaseOut const float a=1.0;const float b=0.0;vec4 matchPixelCenter(vec4 c,vec2 d){vec2 e=vec2(.500123)+.5*c.xy/c.w;vec2 f=floor(e*d);vec2 g=vec2(1.0)/d;vec2 h=(((vec2(.5)+f)*g)*2.0-vec2(1.0))*c.w;return vec4(h.x,h.y,c.z,c.w);}void main(void){float i=fract($auxpos2.x/eo.x);float j=floor($auxpos2.x/eo.y)/eo.y;float k=(texture2D(ll,vec2(i,j))).r;float l=(texture2D(lo,vec2(i,j))).r;float m=mod(oo,ip);float n=getQuintEaseInOutValue(m,k,l,ip);if(lp){n=l;}float o=getLinearValue(el,n);float p=$auxpos2.y*oi*2.0*PI;vec3 q=vec3(po.x*cos(p),po.x*sin(p),0.0);bool r=false;if($auxpos2.z==a){r=true;}else if($auxpos2.z==b){r=false;}vec3 s=po.x*$position+$auxpos1;vec3 t=(viewMat*vec4($auxpos1,1.0)).xyz;vec3 u;mat4 v=mat4(1.0);
#ifdef GLOBAL
u=normalize(s+origin);
#else
u=vec3(0.0,0.0,1.0);
#endif
vec3 w=(viewMat*vec4(s,1.0)).xyz;cg=normalize(w-t);if(r){
#ifdef EFFECT_DEBUG
hc=texture2D(pm,vec2(o,0.5));hc=vec4(o,0.0,0.0,1.0);hc=vec4((texture2D(lo,vec2(0,0))).r/1200.0,0.0,0.0,1.0);hc=vec4((texture2D(lo,vec2(0,0))).r,i,j,1.0);if(p<1.0*PI){hc=texture2D(pm,vec2(o,0.5));}
#else
hc=texture2D(pm,vec2(o,0.5));
#endif
s+=(u*getScope(po.yz,o));}else{
#ifdef EFFECT_DEBUG
#else
hc=vec4(so,1.0);
#endif
}vec3 x=vec3(1.0,0.0,0.0);float y=1.0;float z=1.0;float A=abs(dot(u,normalize(camPos-s)));float B=0.00001;w=(viewMat*vec4(s,1.0)).xyz;if(A>.01){float C=sqrt(1.0-A*A)/A;float D=(1.0-C/mo[2]);if(z>0.0){w*=D;}else{w/=D;}}w+=x;vec4 E=ls*vec4(w,1.0);E.z-=z*B*E.w;gl_Position=matchPixelCenter(E,mo.zw);cg=normalize(u+cg*0.5);gd=w;}]]></snippet></snippets>